name: Terraform Infrastructure

on:
  push:
    paths:
      - 'infra/**'
      - '.github/workflows/infra.yml'
      - 'Makefile'
  pull_request:
    paths:
      - 'infra/**'
      - '.github/workflows/infra.yml'
      - 'Makefile'

jobs:
  terraform:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        env: [local]
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-2
      TERRAFORM_ENV: ${{ matrix.env }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache Terraform providers
        uses: actions/cache@v4
        with:
          path: ~/.terraform.d/plugin-cache
          key: terraform-${{ runner.os }}-${{ hashFiles('**/.terraform.lock.hcl') }}
          restore-keys: |
            terraform-${{ runner.os }}-

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Format Check
        run: make tf-init && terraform fmt -check
        working-directory: infra

      - name: Terraform Validate
        run: make tf-validate TERRAFORM_ENV=${{ matrix.env }}

      - name: Terraform Plan
        id: plan
        run: |
          cd infra
          terraform plan -var-file=environments/${{ matrix.env }}.tfvars -out=tfplan
          terraform show -no-color tfplan > plan.txt

      - name: Upload Terraform plan file
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ matrix.env }}
          path: infra/tfplan

      - name: Upload Terraform plan summary
        uses: actions/upload-artifact@v4
        with:
          name: plan-summary-${{ matrix.env }}
          path: infra/plan.txt

      - name: Terraform Apply (auto for non-prod)
        if: ${{ github.ref == 'refs/heads/main' && matrix.env != 'prod' }}
        run: make tf-apply TERRAFORM_ENV=${{ matrix.env }}
